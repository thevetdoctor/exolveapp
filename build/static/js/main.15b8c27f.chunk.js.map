{"version":3,"sources":["components/row/Row.js","redux/actions.js","reducer.js","redux/store.js","components/board/Board.js","components/slide/Slide.js","components/banner/Banner.js","components/profile/Profile.js","components/dateheader/DateHeader.js","components/todo/Todo.js","components/todos/Todos.js","firebase.js","components/usernavigation/UserNavigation.js","components/todos/NewTodo.js","components/dashboard/Dashboard.js","components/input/Input.js","components/input/Buttons.js","components/homepage/Homepage.js","App.js","reportWebVitals.js","index.js"],"names":["Row","rowName","description","issues","url","stargazersCount","forks","rowClass","className","type","size","slice","actions","setUser","addTodo","saveTodo","handleDone","setUsername","setPassword","setEmail","setTC","setAuthenticate","setPublicData","setRepoData","setTag","setLogOut","initialState","repoData","JSON","parse","localStorage","getItem","publicData","todos","user","username","email","password","tag","tc","authenticated","store","createStore","state","action","console","log","setItem","stringify","todo","findTodo","findIndex","id","todoState","map","idx","newTodo","done","data","error","clear","devToolsEnhancer","Board","getState","dispatch","useSelector","useState","loading","setLoading","derivedData","item","name","open_issues_count","html_url","stargazers_count","forks_count","apiUrl","useEffect","a","axios","method","headers","res","fetchData","setTimeout","color","height","width","length","Slide","count","Banner","public_repos","public_gists","followers","following","Profile","bio","blog","login","avatar_url","twitter_username","location","blogHref","indexOf","trim","src","alt","href","split","DateHeader","dateDetails","Date","weekday","getDay","dateArray","toDateString","toUpperCase","Todo","e","preventDefault","onClick","Todos","dotenv","config","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","auth","firebase","initializeApp","UserNavigation","nav","setNav","logout","signOut","then","catch","message","NewTodo","todoText","setTodoText","Modal","setAppElement","isOpen","style","content","background","fontSize","top","left","right","bottom","marginRight","transform","display","flexFlow","alignItems","borderRadius","justifyContent","placeholder","value","onChange","target","str","Math","trunc","random","Dashboard","Input","props","label","pattern","maxLength","checked","required","marginTop","Button","classname","disabled","Homepage","signupMode","setSignupMode","register","signIn","signInWithEmailAndPassword","createUserWithEmailAndPassword","defalutValue","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15b8c27f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './row.css';\r\nimport { IoEllipsisVertical, IoChevronDownCircleOutline } from 'react-icons/io5';\r\n\r\nexport default function Row({rowName, description, issues, url, stargazersCount, forks, rowClass}) {\r\n    return (\r\n        <div className={`row ${rowClass}`}>\r\n            <span className='mini-span-small'>\r\n                <input\r\n                    type='checkbox' \r\n                />\r\n            </span>\r\n            <span className={`mini-span-small ${rowClass && 'hide'}`}>\r\n                <IoChevronDownCircleOutline \r\n                    size='1.3em'\r\n                />\r\n            </span>\r\n            <span className='mini-span span-name'>\r\n                {rowName}\r\n            </span>\r\n            <span className='main-span desc'>\r\n                {description ? <>{description.slice(0, 125)}</> : 'No description specified'}\r\n            </span>\r\n            <span className='mini-span'>\r\n                {typeof(issues) !== 'string' ? \r\n                    <span>\r\n                        {issues ? \r\n                            <span className='issues valid'>\r\n                                {issues > 1 ? \r\n                                `${issues} issues` \r\n                                : \r\n                                `${issues} issue`} found\r\n                            </span>\r\n                            : \r\n                            <span className='issues invalid'>No issues</span>\r\n                        }\r\n                    </span>\r\n                    :\r\n                    <span>{issues}</span>}\r\n\r\n            </span>\r\n            <span className='main-span'>\r\n                {url}\r\n                <p>\r\n                    {typeof(stargazersCount) !== 'string' ? \r\n                        <span>\r\n                            {stargazersCount ? \r\n                                <span className='count gazers'>\r\n                                    {stargazersCount > 1 ? \r\n                                    `${stargazersCount} stargazers` \r\n                                    : \r\n                                    `${stargazersCount} stargazer`}\r\n                                </span>\r\n                                : \r\n                                <span className='zero gazers'>No stargazers</span>\r\n                            }\r\n                        </span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                </p>\r\n            </span>\r\n            <span className='mini-span'>\r\n                {typeof(forks) !== 'string' ? \r\n                    <span>{forks < 10 ?\r\n                        <span className='forks low'>&lt; 10</span>\r\n                        :\r\n                        <span className='forks high'>&gt; 10</span>\r\n                    }\r\n                    </span>\r\n                    :\r\n                    <span>{forks}</span>\r\n                }\r\n            </span>\r\n            <span className='mini-span-small'>\r\n                <IoEllipsisVertical />\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","const actions = {\r\n    setUser: { type: 'SET_USER'},\r\n    addTodo: { type: 'ADD_TODO'},\r\n    saveTodo: { type: 'SAVE_TODO'},\r\n    handleDone: { type: 'HANDLE_DONE'},\r\n    setUsername: { type: 'SET_USERNAME'},\r\n    setPassword: { type: 'SET_PASSWORD'},\r\n    setEmail: { type: 'SET_EMAIL'},\r\n    setTC: { type: 'SET_TC'},\r\n    setAuthenticate: { type: 'SET_AUTHENTICATE'},\r\n    setPublicData: { type: 'SET_PUBLIC_DATA'},\r\n    setRepoData: { type: 'SET_REPO_DATA'},\r\n    setTag: { type: 'SET_TAG'},\r\n    setLogOut: { type: 'SET_LOGOUT'}\r\n  }\r\n  \r\n  export default actions;\r\n  ","import actions from \"./redux/actions\";\r\n\r\nexport default function reducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case actions.setUser.type:\r\n            console.log('Adding user state');\r\n            localStorage.setItem('user', JSON.stringify(action.user));\r\n            return {\r\n              ...state,\r\n              user: action.user\r\n            }          \r\n        case actions.addTodo.type:\r\n            console.log('About to add a TODO');\r\n            return {\r\n                ...state, addTodo: action.addTodo\r\n            };\r\n        case actions.saveTodo.type:\r\n            console.log('Saving a TODO');\r\n            localStorage.setItem('todos', JSON.stringify([...state.todos, action.todo]));\r\n            return {\r\n                ...state, todos: [...state.todos, action.todo]\r\n            };\r\n        case actions.handleDone.type:\r\n            console.log('Changing TODO\\'s status');\r\n            const findTodo = state.todos.findIndex(todo => todo.id === action.id);\r\n            const todoState = state.todos.map((todo, idx) => {\r\n                let newTodo = {...todo};\r\n                if(findTodo === idx) {\r\n                    newTodo.done = !todo.done\r\n                }\r\n                return newTodo;\r\n            });\r\n            localStorage.setItem('todos', JSON.stringify(todoState));\r\n            return {\r\n                ...state, todos: todoState\r\n            };\r\n        case actions.setUsername.type:\r\n            console.log('Adding github username');\r\n            localStorage.setItem('username', JSON.stringify(action.data));\r\n            return {\r\n                ...state, username: action.data, tag: ''\r\n            };\r\n        case actions.setPassword.type:\r\n            console.log('Adding password');\r\n            return {\r\n                ...state, password: action.data\r\n            };\r\n        case actions.setEmail.type:\r\n            console.log('Adding email');\r\n            return {\r\n                ...state, email: action.data\r\n            };\r\n        case actions.setTC.type:\r\n            console.log('Updating T&C');\r\n            return {\r\n                ...state, tc: action.data\r\n            };\r\n        case actions.setAuthenticate.type:\r\n            console.log('Setting authenticate');\r\n            localStorage.setItem('authenticated', true);\r\n            localStorage.setItem('user', true);\r\n            return {\r\n                ...state, authenticated: action.data, user: true, password: 'hidden'\r\n            };\r\n        case actions.setPublicData.type:\r\n            console.log('Adding public data');\r\n            localStorage.setItem('public', JSON.stringify(action.publicData));\r\n            return {\r\n                ...state, publicData: action.publicData\r\n            };\r\n        case actions.setRepoData.type:\r\n            console.log('Adding repository data');\r\n            localStorage.setItem('repo', JSON.stringify(action.data));\r\n            return {\r\n                ...state, repoData: action.data\r\n            };\r\n        case actions.setTag.type:\r\n            console.log('Tagging errors');\r\n            return {\r\n                ...state, tag: action.error\r\n            };\r\n            \r\n        case actions.setLogOut.type:\r\n        console.log('Logout');\r\n        localStorage.clear();\r\n        return {\r\n            user: null,\r\n            publicData: {},\r\n            repoData: [],\r\n            todos: [],\r\n            authenticated: false\r\n        };\r\n\r\n        default:\r\n        return state;\r\n    }\r\n};\r\n \r\nexport const initialState = {\r\n    repoData: JSON.parse(localStorage.getItem('repo')) || [],\r\n    publicData: JSON.parse(localStorage.getItem('public')) || {},\r\n    todos: JSON.parse(localStorage.getItem('todos')) ||[],\r\n    user: JSON.parse(localStorage.getItem('user')) || null,\r\n    username: JSON.parse(localStorage.getItem('username')) || '',\r\n    addTodo: false,\r\n    email: '',\r\n    password: '',\r\n    tag: '',\r\n    tc: false,\r\n    authenticated: JSON.parse(localStorage.getItem('authenticated')) || false\r\n};\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from '../reducer';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport Row from '../row/Row';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\nimport './board.css';\r\n \r\nexport default function Board() {\r\n  const {getState, dispatch} = store;\r\n  const state = getState();\r\n  const { repoData, username } = useSelector(state => state);\r\n    \r\n  const [loading, setLoading] = useState(true);\r\n  const derivedData = repoData.map(item => {\r\n        return {\r\n                name: item.name,\r\n                description: item.description,\r\n                issues: item.open_issues_count,\r\n                url: item.html_url,\r\n                stargazersCount: item.stargazers_count,\r\n                forks: item.forks_count\r\n              }\r\n      });\r\n    \r\n    const apiUrl = `https://api.github.com/users/${username}/repos?type=all&sort=updated&per_page=8&page=3`;\r\n\r\n    useEffect(() => {\r\n      const fetchData = async() => {\r\n        if(username) {\r\n          const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {'Content-Type': 'application/json'}\r\n          });\r\n          // console.log(\"API data\", res.data, apiUrl);\r\n          dispatch({\r\n            type: 'SET_REPO_DATA',\r\n            data: res.data\r\n          });    \r\n        }\r\n      }\r\n      fetchData();\r\n      return () => console.log('cleanup Board2.js')\r\n    }, [username]);\r\n\r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1500);\r\n        return () => console.log('cleanup Board2.js')\r\n    }, []);\r\n\r\n    return (\r\n        <div className='board'>\r\n             {!loading ?\r\n            <Fragment>\r\n              {derivedData.length ?\r\n                <Fragment>\r\n                    <Row \r\n                      rowName='name' \r\n                      description='description'\r\n                      issues='open_issues'\r\n                      url='homepage url/stargazers_count'\r\n                      stargazersCount=''\r\n                      forks='fork'\r\n                      rowClass='row-heading'\r\n                    />\r\n                    {derivedData.map((item, idx) => (\r\n                      <Row\r\n                          key={idx}\r\n                          rowName={item.name}\r\n                          description={item.description}\r\n                          issues={item.issues}\r\n                          url={item.url}\r\n                          stargazersCount={item.stargazersCount}\r\n                          forks={item.forks}\r\n                      />\r\n                  ))}\r\n                </Fragment>\r\n                :\r\n                <Fragment>\r\n                  <div className='no-repo'>\r\n                    No repository data available\r\n                  </div>\r\n                </Fragment>\r\n              }\r\n            </Fragment>\r\n                :\r\n            <Fragment>\r\n            <Loader \r\n                type='ThreeDots'\r\n                color='#00bfff'\r\n                height={40} \r\n                width={40} \r\n            />\r\n            </Fragment>}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport { BiInfoCircle } from 'react-icons/bi';\r\nimport Loader from 'react-loader-spinner';\r\nimport './slide.css';\r\n\r\nexport default function Slide({tag, count}) {\r\n  const [loading, setLoading] = useState(true);\r\n  \r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n    }, 1200);\r\n      return () => console.log('cleanup Slide.js')\r\n    }, []);\r\n    \r\n    return (\r\n        <div className='tag'>\r\n            {!loading ?\r\n            <Fragment>\r\n              <div className='tag-left'>\r\n                <p className='slide-count'>\r\n                    {count}\r\n                </p>\r\n                <p className='slide-tag'>\r\n                    {tag}\r\n                </p>\r\n                </div>\r\n                <div className='tag-right'>\r\n                    <BiInfoCircle size='25'/>\r\n                </div>\r\n            </Fragment>\r\n                :\r\n            <Fragment>\r\n            <Loader \r\n                type='ThreeDots'\r\n                color='#00bfff'\r\n                height={40} \r\n                width={40} \r\n            />\r\n            </Fragment>}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport Slide from '../slide/Slide';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\nimport './banner.css';\r\n\r\nexport default function Banner() {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();  \r\n    const { public_repos, \r\n            public_gists, \r\n            followers, \r\n            following \r\n            } = useSelector(state => state.publicData);\r\n            \r\n    return (\r\n        <div className='banner'>\r\n            <div className='dashboard-top'>\r\n                <Slide tag='Public repos' count={public_repos} /> \r\n                <Slide tag='Public gists' count={public_gists} /> \r\n                <Slide tag='Followers' count={followers} /> \r\n                <Slide tag='Following' count={following} /> \r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect, Fragment } from 'react';\r\nimport { IoLogoLinkedin, \r\n         IoLogoTwitter, \r\n         IoMailSharp, \r\n         IoBriefcase,\r\n         IoPeopleSharp,\r\n         IoPawSharp,\r\n         IoLogoBuffer,\r\n         IoEarSharp,\r\n         IoLocationSharp\r\n        } from 'react-icons/io5';\r\nimport { useSelector } from 'react-redux';\r\nimport Loader from 'react-loader-spinner';\r\nimport store from '../../redux/store';\r\nimport './profile.css';\r\n\r\nexport default function Profile() {\r\n  const {getState, dispatch} = store;\r\n  const state = getState();     \r\n\r\n  const [loading, setLoading] = useState(true);\r\n  const { bio,\r\n            blog,\r\n            name,\r\n            login,\r\n            avatar_url,\r\n            email,\r\n            twitter_username,\r\n            location,\r\n            public_repos, \r\n            public_gists, \r\n            followers, \r\n            following,\r\n            } = useSelector(state => state.publicData);\r\n  const { username } = useSelector(state => state);\r\n  const blogHref = blog?.indexOf('http') > -1 ? blog : `https://www.${blog?.trim()}`;\r\n \r\n    useEffect(() => {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 1000);\r\n        return () => console.log('cleanup Profile.js')\r\n      }, []);\r\n      \r\n    return (\r\n        <div className='profile'>\r\n          {!loading ?\r\n          <Fragment>\r\n            <p className=''>\r\n                <span>\r\n                    <img \r\n                        src={avatar_url}\r\n                        alt='User avatar'\r\n                    />\r\n                </span>\r\n                <span className='user-banner'>\r\n                    <span className='username'>{name}</span><br />\r\n                    <span>{login}</span>\r\n                </span>\r\n            </p>\r\n            {bio && <p><IoBriefcase size='1.8em'/> <span>{bio}</span></p>}\r\n            {blog && <p><IoLogoLinkedin /> <span><a href={blogHref}>...{blog.split('.com')[1]}</a></span></p>}\r\n            {email && <p><IoMailSharp /> <span>{email}</span></p>}\r\n            {twitter_username && <p><IoLogoTwitter /> <span><a href={`https://www.twitter.com/${twitter_username}`}>@{twitter_username}</a></span></p>}\r\n            {location && <p><IoLocationSharp /> <span>{location}</span></p>}\r\n            {public_repos && <p><IoLogoBuffer /> <span>Repositories {public_repos}</span></p>}\r\n            {public_gists > 0 && <p><IoEarSharp /> <span><a href={`https://gist.github.com/${username}`}>Gists</a> {public_gists}</span></p>}\r\n            {followers > 0 && <p><IoPeopleSharp /> <span><a href={`https://github.com/${username}?tab=followers`}>Followers</a> {followers}</span></p>}\r\n            {following > 0 && <p><IoPawSharp /> <span><a href={`https://github.com/${username}?tab=following`}>Following</a>{following}</span></p>}\r\n        </Fragment>\r\n        :\r\n        <Fragment>\r\n          <div>\r\n            <Loader \r\n              type='ThreeDots'\r\n              color='#00bfff'\r\n              height={40} \r\n              width={40} \r\n            />\r\n          </div>\r\n        </Fragment>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './dateheader.css';\r\n\r\nexport default function DateHeader() {\r\n    const dateDetails = new Date();\r\n    const weekday = dateDetails.getDay();\r\n    const weekdays = [\r\n        'Sunday',\r\n        'Monday',\r\n        'Tuesday',\r\n        'Wednesday',\r\n        'Thursday',\r\n        'Friday',\r\n        'Saturday',\r\n        'Sunday'\r\n    ];\r\n    const dateArray = dateDetails.toDateString().split(' ');\r\n\r\n    return (\r\n        <div className='date-header'>\r\n           <div className='date-day'>\r\n               <div>\r\n                    {dateArray[2]}\r\n               </div>\r\n               <div className='date-month-year'>\r\n                   <span>{dateArray[1].toUpperCase()}</span>\r\n                   <span>{dateArray[3]}</span>\r\n               </div>\r\n            </div>\r\n           <div className='weekday'>{weekdays[weekday].toUpperCase()}</div> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { IoCheckmarkCircle, IoEllipseOutline } from 'react-icons/io5';\r\nimport store from '../../redux/store';\r\nimport './todo.css';\r\n\r\nexport default function Todo({id, name, done}) {\r\n    const {dispatch} = store;\r\n\r\n    const handleDone = (e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: 'HANDLE_DONE',\r\n            id\r\n        });\r\n    }\r\n    return (\r\n        <div className='todo'>\r\n            <p className={`todo-item ${done && 'done'}`}> \r\n                {name} \r\n                {done ?\r\n                    <span onClick={e => handleDone(e)}>\r\n                        <IoCheckmarkCircle \r\n                        color='#3EF520'\r\n                        />\r\n                    </span>\r\n                    :\r\n                    <span onClick={e => handleDone(e)}>\r\n                        <IoEllipseOutline \r\n                        />\r\n                    </span>\r\n                }\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react'\r\nimport DateHeader from '../dateheader/DateHeader'; \r\nimport Todo from '../todo/Todo';\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\nimport { IoAddCircleSharp } from 'react-icons/io5';\r\nimport './todos.css';\r\n\r\nexport default function Todos() {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { todos } = useSelector(state => state);\r\n    \r\n    const addTodo = () => {\r\n        dispatch({\r\n            type: 'ADD_TODO',\r\n            addTodo: true\r\n        });\r\n    };\r\n\r\n    return ( \r\n        <div className='todos'>\r\n            <div className='todo-dateheader'>\r\n                <DateHeader />\r\n            </div>\r\n            {todos.map((todo, idx) => (\r\n                <Todo \r\n                    key={idx}\r\n                    id={todo.id}\r\n                    name={todo.name} \r\n                    done={todo.done} \r\n                />\r\n            ))}\r\n            <div className='add-todo'>\r\n                <span onClick={() => addTodo()}>\r\n                    <IoAddCircleSharp \r\n                        size='4em' \r\n                        color='#609FFF'\r\n                    />\r\n                </span>\r\n            </div>\r\n        </div>\r\n    ) \r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport firebase from \"firebase\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst {REACT_APP_API_KEY, \r\n      REACT_APP_AUTH_DOMAIN, \r\n      REACT_APP_DATABASE_URL, \r\n      REACT_APP_PROJECT_ID, \r\n      REACT_APP_STORAGE_BUCKET, \r\n      REACT_APP_MESSAGING_SENDER_ID, \r\n      REACT_APP_APP_ID, \r\n      REACT_APP_MEASUREMENT_ID} = process.env;\r\n\r\nconst firebaseConfig = {\r\n  apiKey: REACT_APP_API_KEY,\r\n  authDomain: REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: REACT_APP_DATABASE_URL,\r\n  projectId: REACT_APP_PROJECT_ID,\r\n  storageBucket: REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: REACT_APP_APP_ID,\r\n  measurementId: REACT_APP_MEASUREMENT_ID\r\n};\r\n// console.log(firebaseConfig);\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\n// const db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { auth };","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import GoTrue from 'gotrue-js';\r\nimport { auth } from '../../firebase';\r\nimport { IoChevronDownSharp,\r\n        IoChevronUpSharp,\r\n         IoNotificationsSharp, \r\n         IoPersonCircleSharp,\r\n         IoExitSharp\r\n        } from 'react-icons/io5';\r\nimport store from '../../redux/store';\r\nimport './usernavigation.css';\r\n\r\nexport default function UserNavigation() {\r\n    const {dispatch} = store;\r\n\r\n    const [nav, setNav] = useState(false);\r\n    const navigate = () => {\r\n        setNav(!nav);\r\n    }\r\n    \r\n    // Instantiate the GoTrue auth client with an optional configuration\r\n    // const auth = new GoTrue({\r\n    //     APIUrl: 'https://goofy-kare-a5c4ce.netlify.app/.netlify/identity',\r\n    //     audience: '',\r\n    //     setCookie: false,\r\n    // });\r\n  \r\n  const logout = async() => {\r\n\r\n        // try{\r\n        await auth\r\n                .signOut()\r\n                .then(() => {\r\n                    console.log(\"User logged out\");\r\n                    dispatch({\r\n                        type: 'SET_LOGOUT',\r\n                    });\r\n                })\r\n                .catch((error) => {\r\n                    console.log(error.message);\r\n                });\r\n        \r\n            // user\r\n            // .logout()\r\n            // .then(response => console.log(\"User logged out\"))\r\n            // .catch(error => {\r\n            //     console.log(\"Failed to logout user: %o\", error);\r\n            //     throw error;\r\n            // });\r\n\r\n        // } catch(error) {\r\n        //     console.log(error.message);\r\n        // }  \r\n    };\r\n\r\n    return (\r\n        <div className='usernavigation'>\r\n            <span className='user-notification'>\r\n            <IoNotificationsSharp \r\n                color='#72809d'\r\n                />\r\n            </span>\r\n            <span className='user-avatar'>\r\n                <IoPersonCircleSharp size='1.1em'/>\r\n            </span>\r\n            <span className='user-action' onClick={() => navigate()}>\r\n                {!nav ? \r\n                    <IoChevronDownSharp size='0.8em' />\r\n                    :\r\n                    <IoChevronUpSharp size='0.8em' />\r\n                }\r\n            </span>\r\n            <span className='user-logout' onClick={() => logout()}>\r\n                    {nav && <IoExitSharp size='0.9em' />}\r\n            </span>\r\n            {/* {nav && <span className='logout'>logout</span>} */}\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\nimport { useSelector } from 'react-redux';\r\nimport store from '../../redux/store';\r\nimport Modal from \"react-modal\";\r\nimport './newtodo.css';\r\n\r\nexport default function NewTodo() {\r\n  const {getState, dispatch} = store;\r\n  const state = getState();\r\n  const [todoText, setTodoText] = useState('');\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  const closeModal = () => {\r\n    dispatch({\r\n        type: 'ADD_TODO',\r\n        addTodo: false\r\n    });\r\n};\r\n\r\n  Modal.setAppElement(\"div\");\r\n\r\n  const customStyles = {\r\n    content: {\r\n      background: \"rgba(255,255,255, 0.3)\",\r\n      fontSize: \"1.2em\",\r\n      top: \"54%\",\r\n      left: \"50%\",\r\n      right: \"auto\",\r\n      bottom: \"auto\",\r\n      marginRight: \"50%\",\r\n      transform: \"translate(-50%, -50%)\",\r\n      display: \"flex\",\r\n      flexFlow: \"column\",\r\n      width: \"25vw\",\r\n      alignItems: \"center\",\r\n      borderRadius: \"1rem\",\r\n      justifyContent: \"center\"\r\n    }\r\n  };\r\n  const formChange = (e) => {\r\n    e.preventDefault();\r\n    setTodoText(e.target.value);\r\n  };\r\n  const cancelTodo = () => {\r\n    console.log('Cancelling Todo');\r\n    setTodoText('');\r\n  };\r\n  const saveTodo = () => {\r\n    if(todoText) {\r\n      // create unique ID for TODO\r\n      let str = Math.trunc(Math.random() * 1000);\r\n      let id = `5fa82b63f201f705d1a3ab${str}`;      \r\n      \r\n      dispatch({\r\n        type: 'SAVE_TODO',\r\n        todo: {id, name: todoText, done: false}\r\n      });\r\n      setTodoText('');\r\n    } else {\r\n      console.log('Input field is empty');\r\n      return false;\r\n    }\r\n    console.log(todoText);\r\n  };\r\n\r\n  return (\r\n    <Modal isOpen={state.addTodo} style={customStyles}>\r\n      <div className=\"close-div\" onClick={() => closeModal()}>\r\n        <span className=\"close-btn\">\r\n          <FaTimes />\r\n        </span>\r\n      </div>\r\n      <div className='todo-form'>\r\n        <span className='todo-form-header'>New Todo </span>\r\n        <span className='todo-form-tip'>Please write content of TODO in the input below </span>\r\n        <span className='todo-input'>\r\n          <input\r\n            type='text'\r\n            placeholder='Do something ...'\r\n            value={todoText}\r\n            onChange={formChange}\r\n          />\r\n        </span>\r\n        <span className='btn-span'>\r\n          <span className='cancel btn' onClick={() => cancelTodo()}>Cancel</span>\r\n          <span className='add btn' onClick={() => saveTodo()}>Add</span>\r\n        </span>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport Board from '../board/Board';\r\nimport Banner from '../banner/Banner';\r\nimport Profile from '../profile/Profile';\r\nimport Todos from '../todos/Todos';\r\nimport UserNavigation from '../usernavigation/UserNavigation';\r\nimport NewTodo from '../todos/NewTodo';\r\nimport './dashboard.css';\r\n\r\nexport default function Dashboard() {\r\n    return (\r\n        <div>\r\n            {/* <span className='refresh'>\r\n                Refresh the page to check your github information!!!\r\n            </span>              */}\r\n            <UserNavigation />\r\n            <h2>My GITHUB Dashboard App</h2>\r\n            <div className='app'>\r\n                <div className='app-left'> \r\n                    <Profile />\r\n                    <Todos />\r\n                </div>\r\n                {/* <div className='top-content'> */}\r\n                {/* </div> */}\r\n                <div>\r\n                <Banner />\r\n                <Board />\r\n                <NewTodo />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React from 'react';\r\nimport store from '../../redux/store';\r\nimport './Input.css';\r\n\r\nexport default function Input(props) {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();     \r\n\r\n    const handleInputChange = (e) => {\r\n                const target = e.target;\r\n                const name = target.name;\r\n                let value;\r\n                if(target.type === 'checkbox') {\r\n                    value = target.checked;\r\n                } else {\r\n                    value = target.value;\r\n                }\r\n            \r\n                // console.log(name, value, `SET_${name.toUpperCase()}`);\r\n                dispatch({\r\n                    type: `SET_${name.toUpperCase()}`,\r\n                    data: value\r\n                });\r\n              } \r\n\r\n    return (\r\n        <div className='input_section'>\r\n            <label>{props.label}</label>\r\n            <input\r\n                type={props.type}\r\n                name={props.name}\r\n                value={props.value}\r\n                pattern={props.pattern}\r\n                maxLength={props.maxLength}\r\n                placeholder={props.placeholder}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <span style={{ \r\n                    marginTop: '0.7em', \r\n                    display: 'inline', \r\n                    color: 'red',\r\n                    fontSize: '0.8em'\r\n                    }}>\r\n                        {props.tag}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { db } from \"./firebase\";\r\n// import { useCozaState } from './CozaProvider';\r\nimport './Buttons.css';\r\n\r\nexport default function Button(props) {\r\n// console.log(props);\r\n  return (\r\n      <button\r\n        className={props.classname}\r\n        type='button'\r\n        name={props.name}\r\n        url={props.url}\r\n        onClick={props.onClick}\r\n        disabled={props.disabled}\r\n        >\r\n        {props.name}\r\n      </button>\r\n    )\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n// import GoTrue from 'gotrue-js';\r\nimport { auth } from '../../firebase';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport Input from '../input/Input';\r\nimport Button from '../input/Buttons';\r\nimport store from '../../redux/store';\r\nimport './homepage.css';\r\n \r\nexport default function Homepage() {\r\n    const {getState, dispatch} = store;\r\n    const state = getState();    \r\n    const { email, password, username, tc, tag } = useSelector(state => state);\r\n    const [loading, setLoading] = useState(false);\r\n    const [signupMode, setSignupMode] = useState(false);\r\n    \r\n  // Instantiate the GoTrue auth client with an optional configuration\r\n//   const auth = new GoTrue({\r\n//     APIUrl: 'https://goofy-kare-a5c4ce.netlify.app/.netlify/identity',\r\n//     audience: '',\r\n//     setCookie: false,\r\n//   });\r\n\r\n  const apiUrl = `https://api.github.com/users/${username}`;\r\n\r\n  const fetchData = async() => {\r\n    if(username) {\r\n     \r\n     try {\r\n         const res = await axios({\r\n          method: 'GET',\r\n          url: `${apiUrl}`,\r\n          headers: {'Content-Type': 'application/json'}\r\n          });\r\n          dispatch({\r\n            type: 'SET_PUBLIC_DATA',\r\n            publicData: res.data\r\n          });\r\n          if(signupMode) {\r\n              register();\r\n          } else {\r\n              signIn();\r\n          }\r\n        }  catch(e) {\r\n            setLoading(false);\r\n            dispatch({\r\n            type: 'SET_TAG',\r\n            error: e.message ? `Not a valid GITHUB username` : 'Error found'\r\n            });\r\n        }\r\n    }  \r\n  }\r\n  \r\n\r\n    const signIn = async() => {\r\n        // e.preventDefault();\r\n        await auth\r\n            .signInWithEmailAndPassword(email, password)\r\n            .then(auth => {\r\n                console.log('User logged in');\r\n                setLoading(false);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: auth\r\n                });\r\n                dispatch({\r\n                    type: 'SET_AUTHENTICATE',\r\n                    data: true\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.message);\r\n                setLoading(false);\r\n                dispatch({\r\n                  type: 'SET_TAG',\r\n                  error: error.message.indexOf('no user') > -1 ? 'Account not found, please select signup' : error.message\r\n                });             \r\n              });\r\n    }\r\n\r\n    const register = async() => {\r\n        // e.preventDefault();\r\n        await auth\r\n            .createUserWithEmailAndPassword(email, password)\r\n            .then((auth) => {\r\n                console.log('User signed up');\r\n                setLoading(false);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: auth\r\n                });\r\n                dispatch({\r\n                    type: 'SET_AUTHENTICATE',\r\n                    data: true\r\n                });\r\n            })  \r\n            .catch((error) => {\r\n                console.log(\"It's an error\", error.message);\r\n                setLoading(false);\r\n                dispatch({\r\n                  type: 'SET_TAG',\r\n                  error: error.message.indexOf('already') > -1 ? 'Account already exist, please select login' : error.message\r\n\r\n                }); \r\n            });\r\n    }\r\n\r\n  const signup = async() => {\r\n    setLoading(true);\r\n    await auth\r\n              .signup(email, password)\r\n              .then((response) => {\r\n                  console.log('Confirmation email sent', response);\r\n                  setLoading(false);\r\n                  dispatch({\r\n                    type: 'SET_TAG',\r\n                    error: 'Successful, please check your email'\r\n                  });                 \r\n             })\r\n              .catch((error) => {\r\n                  console.log(\"It's an error\", error);\r\n                  setLoading(false);\r\n                  dispatch({\r\n                    type: 'SET_TAG',\r\n                    error: error.message\r\n                  }); \r\n              });\r\n  }\r\n\r\n  const login = async() => {\r\n      await auth\r\n            .login(email, password, true)\r\n            .then((response) => {\r\n              setLoading(false);\r\n                dispatch({\r\n                    type: 'SET_USER',\r\n                    user: response\r\n                });\r\n                dispatch({\r\n                    type: 'SET_AUTHENTICATE',\r\n                    data: true\r\n                });\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n              setLoading(false);\r\n              dispatch({\r\n                type: 'SET_TAG',\r\n                error: error.message\r\n              });             \r\n            });\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setLoading(true);\r\n        fetchData();\r\n    }\r\n\r\n    return (\r\n        <div className='homepage-banner'>\r\n            <div className='homepage-top'>\r\n                <div className='tag-home'>\r\n                    <p className='slide-home'>\r\n                        Exolve Dashboard App\r\n                    </p>\r\n                    <p className='slide-home'>\r\n                        {signupMode ? 'SIGNUP' : ''}\r\n                        <span \r\n                            className='mode' \r\n                            onClick={() => setSignupMode(!signupMode)}\r\n                            >\r\n                            {signupMode ? 'click to login ?' : 'click to signup ?'}\r\n                        </span>\r\n                        {signupMode ? '' : 'LOGIN'}\r\n                    </p>\r\n                    <Input \r\n                        label='Email'\r\n                        type='text'\r\n                        value={email}\r\n                        defalutValue={email}\r\n                        name='email'\r\n                        placeholder='Enter your email'\r\n                    />\r\n                    <Input \r\n                        label='Password'\r\n                        type='password'\r\n                        value={password}\r\n                        name='password'\r\n                        placeholder='Enter your password'\r\n                    />\r\n                    <Input \r\n                        label='Username - github'\r\n                        type='text'\r\n                        value={username}\r\n                        tag={tag}\r\n                        name='username'\r\n                        placeholder='Enter your github username'\r\n                    />\r\n                    <div className={`tc ${!tc && 'tc-red'}`}>\r\n                        <Input \r\n                        type='checkbox'\r\n                        value={tc}\r\n                        name='tc'\r\n                        placeholder='Enter your github username'\r\n                        /><span>Accept Terms & Conditions</span>\r\n                    </div>\r\n                    {!loading ?\r\n                    <Button\r\n                        name={signupMode ? 'SIGNUP' : 'LOGIN'}\r\n                        classname='btn'\r\n                        onClick={handleSubmit}\r\n                        disabled={!email || !password || !username || !tc}\r\n                    />\r\n                    :\r\n                    <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={80} \r\n                        width={80} \r\n                    />}\r\n                </div>\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Dashboard from './components/dashboard/Dashboard';\nimport Homepage from './components/homepage/Homepage';\nimport NewTodo from './components/todos/NewTodo';\nimport store from './redux/store';\n    \nfunction App() {\n  const {getState, dispatch} = store;\n  const state = getState();\n  const { authenticated } = useSelector(state => state);\n  \n  return (\n    <div className=\"App\">\n      {authenticated && <NewTodo />}\n      {authenticated && <Dashboard />}\n      {!authenticated && <Homepage />}\n    </div> \n  ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n        <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}